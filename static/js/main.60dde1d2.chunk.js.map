{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","contacts","createReducer","actions","state","contactName","find","contact","toLowerCase","contactNumber","alert","filter","_","combineReducers","rootReducer","contactsReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Title","styled","h2","SectionTitle","title","children","FormContact","form","FormButton","button","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","e","preventDefault","type","pattern","required","onChange","Label","label","Filter","getVisibleContacts","allContacts","getContacts","getFilter","normalizedFilter","includes","List","ol","ListItem","li","ButtonDelete","Span","span","ContactList","useSelector","map","onClick","onDeleteContact","Container","div","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.60dde1d2.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/addContact', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contactList/deleteContact');\nexport const filterContacts = createAction('filter/filterContact');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => {\n    const contactName = state.find(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    const contactNumber = state.find(\n      contact => contact.number === payload.number,\n    );\n    if (contactName) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    if (contactNumber) {\n      alert(`${payload.number} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","/* eslint-disable no-unused-vars */\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // children: PropTypes.node.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  max-width: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: tomato;\r\n  border: 2px solid #e03618;\r\n  border-radius: 5px;  \r\n  cursor: pointer; \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n  \r\n  background-color: #329232;\r\n  border: 2px solid #207210;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { FormContact, FormButton } from './ContactForm.styled';\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <FormContact onSubmit={handleSubmit}>\r\n            <label>\r\n                Name\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />            \r\n            <label> Number\r\n                <br />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />\r\n            <FormButton type=\"submit\">\r\n                Add contact\r\n            </FormButton>         \r\n        </FormContact>\r\n    );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n   font-weight: 500;\r\n`;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/actions';\r\nimport { Label } from './Filter.styled';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const changeFilter = e => {\r\n        let value = e.currentTarget.value;\r\n        dispatch(filterContacts(value));\r\n  };  \r\n\r\n    return (\r\n        <Label>\r\n        Find contacts by name\r\n        <br/>\r\n                <input\r\n                type=\"text\"                \r\n           onChange={changeFilter}\r\n         />\r\n    </Label>\r\n    )     \r\n};\r\n   \r\n ","export const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ol`\r\n  max-width: 300px;\r\n  cursor: pointer;\r\n  padding-left: 5px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n \r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  margin-left: 8px;\r\n\r\n  background-color: tomato;\r\n  border: 2px solid #e03618;\r\n  cursor: pointer; \r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: inline-block;\r\n`;\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport { List, ListItem, ButtonDelete, Span } from './ContactList.styled';\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getVisibleContacts);\r\n\r\n    const onDeleteContact = id => dispatch(deleteContact(id));    \r\n  \r\n    return (\r\n        <List>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ListItem key={id}>\r\n                    <Span>{name}: </Span>\r\n                    <Span>{number} </Span>\r\n                    <ButtonDelete\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                    >\r\n                        Delete\r\n                    </ButtonDelete>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 300px;\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  background: linear-gradient(45deg, rgb(226, 206, 201), #e67966);\r\n  border-radius: 10px;\r\n  border: 2px solid #e03618;;\r\n`;","import SectionTitle from '../SectionTitle';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport { Container } from './App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <SectionTitle title=\"Phonebook\">\r\n        <ContactForm />\r\n      </SectionTitle>\r\n\r\n      <SectionTitle title=\"Contacts\">\r\n        <Filter/>\r\n        <ContactList/>\r\n      </SectionTitle>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}