{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","contacts","createReducer","actions","state","filter","contact","_","combineReducers","rootReducer","contactsReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Title","styled","h2","SectionTitle","title","children","FormContact","form","FormButton","button","ContactForm","dispatch","useDispatch","useState","setName","setNumber","useSelector","handleChange","event","currentTarget","value","reset","onSubmit","e","preventDefault","find","toLowerCase","alert","type","pattern","required","onChange","Filter","List","ol","ListItem","li","ButtonDelete","ContactList","contactsList","includes","filtersContacts","map","onClick","onDeleteContact","Container","div","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9543331a.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/addContact', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contactList/deleteContact');\nexport const filterContacts = createAction('filter/filterContact');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\n// const contacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// const initialState = JSON.parse(localStorage.getItem('contacts'));\n\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n);\n\n// export const contactsReducer = (state = initialState ?? contacts, { type, payload }) => {\n//   switch (type) {\n//     case ADD_CONTACT:\n//       localStorage.setItem('contacts', JSON.stringify([...state, payload]));\n//       return [...state, payload];\n//     case DELETE_CONTACT:\n//       const contact = state.filter(contact => contact.id !== payload);\n//       localStorage.setItem('contacts', JSON.stringify(contact));\n//       return contact;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\n// export const filterReducer = (state = '', action) => {\n//   switch (action.type) {\n//     case FILTER_CONTACT:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// export const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n// export const ADD_CONTACT = 'contacts/AddContact';\n// export const DELETE_CONTACT = 'contactList/DeleteContact';\n// export const FILTER_CONTACT = 'filter/filterContact';\n","/* eslint-disable no-unused-vars */\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistConfig = {\n  key: 'phonebook',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // children: PropTypes.node.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  max-width: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: #d3dbdb;\r\n  border: 2px solid blue;\r\n  border-radius: 5px;  \r\n  cursor: pointer; \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n  \r\n  background-color: #4e4bdd;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { FormContact, FormButton } from './ContactForm.styled';\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(state => state.contacts);\r\n\r\n    const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase()\r\n        )) {\r\n            alert(`${name} is already in contacts.`);\r\n        } else if (contacts.find(\r\n            contact => contact.number === number)) {\r\n            alert(`This number ${number} is already in contacts`);\r\n        } else {\r\n            dispatch(addContact({ name, number }));\r\n        };\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <FormContact onSubmit={handleSubmit}>\r\n            <label>\r\n                Name\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />            \r\n            <label> Number\r\n                <br />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />\r\n            <FormButton type=\"submit\">\r\n                Add contact\r\n            </FormButton>         \r\n        </FormContact>\r\n    );\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const changeFilter = e => {\r\n        let value = e.currentTarget.value;\r\n        dispatch(filterContacts(value));\r\n  };  \r\n\r\n    return (\r\n        <label>\r\n        Find contacts by name\r\n        <br/>\r\n                <input\r\n                type=\"text\"                \r\n           onChange={changeFilter}\r\n         />\r\n    </label>\r\n    )     \r\n};\r\n   \r\n ","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ol`\r\n  max-width: 300px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\nmargin-bottom: 8px;\r\n \r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  margin-left: 8px;\r\n\r\n  background-color: #5283ec;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport { List, ListItem, ButtonDelete } from './ContactList.styled';\r\n\r\nconst filtersContacts = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state => state.contacts);\r\n    const filter = useSelector(state => state.filter);\r\n\r\n    const contactsList = filtersContacts(contacts, filter);\r\n\r\n    const onDeleteContact = id => dispatch(deleteContact(id));    \r\n  \r\n    return (\r\n        <List>\r\n            {contactsList.map(({id, name, number}) => (\r\n                <ListItem key={id}>\r\n                    {name}: {number}\r\n                    <ButtonDelete\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                    >\r\n                        Delete\r\n                    </ButtonDelete>                \r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 300px;\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  background-color: #d3dbdb;\r\n  border-radius: 10px;\r\n  border: 1px solid blue\r\n`;","import SectionTitle from '../SectionTitle';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport { Container } from './App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <SectionTitle title=\"Phonebook\">\r\n        <ContactForm />\r\n      </SectionTitle>\r\n\r\n      <SectionTitle title=\"Contacts\">\r\n        <Filter/>\r\n        <ContactList/>\r\n      </SectionTitle>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}